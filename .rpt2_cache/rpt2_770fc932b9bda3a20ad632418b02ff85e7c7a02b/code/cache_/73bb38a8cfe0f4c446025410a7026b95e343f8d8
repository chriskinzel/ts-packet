{"code":"import { Int16, Int32, Int8, isTypeDescendantOfAbstractPacket, UInt16, UInt32, UInt8, UTF8String } from './Types';\r\nexport function typedFieldToBuffer(field, fieldStructure) {\r\n    if (fieldStructure.type instanceof Array) {\r\n        return typedArrayToBuffer(field, fieldStructure);\r\n    }\r\n    else if (fieldStructure.type.name === undefined) {\r\n        return typedObjectLiteralToBuffer(field, fieldStructure);\r\n    }\r\n    else if (isTypeDescendantOfAbstractPacket(fieldStructure.type)) {\r\n        return subpacketToBuffer(field);\r\n    }\r\n    else {\r\n        return typedPrimitiveToBuffer(field, fieldStructure);\r\n    }\r\n}\r\nexport function typedArrayToBuffer(field, fieldStructure) {\r\n    return Buffer.concat(field.map(typedItem => typedFieldToBuffer(typedItem, { type: fieldStructure.type[0] })));\r\n}\r\nexport function typedObjectLiteralToBuffer(field, fieldStructure) {\r\n    return Buffer.concat(Object.entries(fieldStructure.type)\r\n        .map(([subfield, subfieldStructure]) => typedFieldToBuffer(field[subfield], { type: subfieldStructure })));\r\n}\r\nexport function subpacketToBuffer(field) {\r\n    return field.data;\r\n}\r\nexport function typedPrimitiveToBuffer(field, fieldStructure) {\r\n    let buffer;\r\n    switch (fieldStructure.type) {\r\n        case UInt8:\r\n        case Int8:\r\n        case UInt16:\r\n        case Int16:\r\n        case UInt32:\r\n        case Int32:\r\n            buffer = Buffer.allocUnsafe(fieldStructure.type.size);\r\n            break;\r\n        case UTF8String:\r\n        case Buffer:\r\n            buffer = Buffer.allocUnsafe(fieldStructure.length);\r\n            break;\r\n        default:\r\n            throw {\r\n                name: 'Packet Field Type Error',\r\n                message: 'Unrecognized fixed width type.'\r\n            };\r\n    }\r\n    switch (fieldStructure.type) {\r\n        case UInt8:\r\n            buffer.writeUInt8(field, 0);\r\n            break;\r\n        case Int8:\r\n            buffer.writeInt8(field, 0);\r\n            break;\r\n        case UInt16:\r\n            buffer.writeUInt16BE(field, 0);\r\n            break;\r\n        case Int16:\r\n            buffer.writeInt16BE(field, 0);\r\n            break;\r\n        case UInt32:\r\n            buffer.writeUInt32BE(field, 0);\r\n            break;\r\n        case Int32:\r\n            buffer.writeInt32BE(field, 0);\r\n            break;\r\n        case UTF8String:\r\n            buffer.write(field);\r\n            break;\r\n        case Buffer:\r\n            field.copy(buffer);\r\n            break;\r\n    }\r\n    return buffer;\r\n}\r\n//# sourceMappingURL=BufferWriteUtils.js.map","map":"{\"version\":3,\"file\":\"BufferWriteUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../lib/BufferWriteUtils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/Chris/Projects/ts-packet/BufferWriteUtils.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\r\nimport { AbstractPacket } from './AbstractPacket';\r\nimport { PacketField, PacketFieldArray, PacketFieldArrayType, PacketFieldComplex, PacketFieldComplexType, PacketFieldPrimitive, PacketFieldStructureMetadata } from './Types';\r\nexport declare function typedFieldToBuffer(field: PacketField, fieldStructure: PacketFieldStructureMetadata): Buffer;\r\nexport declare function typedArrayToBuffer(field: PacketFieldArray, fieldStructure: PacketFieldStructureMetadata<PacketFieldArrayType>): Buffer;\r\nexport declare function typedObjectLiteralToBuffer(field: PacketFieldComplex, fieldStructure: PacketFieldStructureMetadata<PacketFieldComplexType>): Buffer;\r\nexport declare function subpacketToBuffer(field: AbstractPacket): Buffer;\r\nexport declare function typedPrimitiveToBuffer(field: PacketFieldPrimitive, fieldStructure: PacketFieldStructureMetadata<PacketFieldPrimitive>): Buffer;\r\n"}}
