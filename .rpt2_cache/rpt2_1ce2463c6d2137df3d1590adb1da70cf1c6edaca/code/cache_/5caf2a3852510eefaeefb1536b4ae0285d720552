{"code":"import { AbstractPacket } from './AbstractPacket';\r\n/* tslint:disable:max-classes-per-file */\r\nexport class UInt8 extends Number {\r\n}\r\nUInt8.size = 1;\r\nexport class Int8 extends Number {\r\n}\r\nInt8.size = 1;\r\nexport class UInt16 extends Number {\r\n}\r\nUInt16.size = 2;\r\nexport class Int16 extends Number {\r\n}\r\nInt16.size = 2;\r\nexport class UInt32 extends Number {\r\n}\r\nUInt32.size = 4;\r\nexport class Int32 extends Number {\r\n}\r\nInt32.size = 4;\r\nexport class UTF8String extends String {\r\n}\r\nexport function isTypeDescendantOfAbstractPacket(type) {\r\n    for (let currentPrototype = Object.getPrototypeOf(type); currentPrototype !== null; currentPrototype = Object.getPrototypeOf(currentPrototype)) {\r\n        if (currentPrototype === AbstractPacket) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport const PACKET_STRUCTURE_SYMBOL = Symbol('PacketStructure');\r\nexport const BUFFER_OFFSET_SYMBOL = Symbol('BufferOffset');\r\n//# sourceMappingURL=Types.js.map","map":"{\"version\":3,\"file\":\"Types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../lib/Types.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,cAAc,EAAC,MAAM,kBAAkB,CAAC;AAEhD,yCAAyC;AACzC,MAAM,OAAO,KAAM,SAAQ,MAAM;;AAAkB,UAAI,GAAG,CAAC,CAAC;AAC5D,MAAM,OAAO,IAAK,SAAQ,MAAM;;AAAmB,SAAI,GAAG,CAAC,CAAC;AAC5D,MAAM,OAAO,MAAO,SAAQ,MAAM;;AAAiB,WAAI,GAAG,CAAC,CAAC;AAC5D,MAAM,OAAO,KAAM,SAAQ,MAAM;;AAAkB,UAAI,GAAG,CAAC,CAAC;AAC5D,MAAM,OAAO,MAAO,SAAQ,MAAM;;AAAiB,WAAI,GAAG,CAAC,CAAC;AAC5D,MAAM,OAAO,KAAM,SAAQ,MAAM;;AAAkB,UAAI,GAAG,CAAC,CAAC;AAE5D,MAAM,OAAO,UAAW,SAAQ,MAAM;CAAG;AAOzC,MAAM,UAAU,gCAAgC,CAAC,IAA0C;IACvF,KAAK,IAAI,gBAAgB,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAClD,gBAAgB,KAAK,IAAI,EACzB,gBAAgB,GAAG,MAAM,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE;QAC7D,IAAI,gBAAgB,KAAK,cAAc,EAAE;YACrC,OAAO,IAAI,CAAC;SACf;KACJ;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAqDD,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACjE,MAAM,CAAC,MAAM,oBAAoB,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC\"}","dts":{"name":"/Users/Chris/Projects/ts-packet/Types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\r\nimport { AbstractPacket } from './AbstractPacket';\r\nexport declare class UInt8 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class Int8 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class UInt16 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class Int16 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class UInt32 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class Int32 extends Number {\r\n    static size: number;\r\n}\r\nexport declare class UTF8String extends String {\r\n}\r\nexport interface PacketFieldStructureMetadata<T = PacketField> {\r\n    type: Class<T>;\r\n    length?: number;\r\n}\r\nexport declare function isTypeDescendantOfAbstractPacket(type: PacketFieldType | Class<PacketField>): boolean;\r\nexport declare type PacketFieldFixedWidth = UInt8 | Int8 | UInt16 | Int16 | UInt32 | Int32;\r\nexport declare type PacketFieldPrimitive = PacketFieldFixedWidth | UTF8String | Buffer;\r\nexport declare type PacketFieldArray = DistributeArray<PacketFieldFixedWidth> | PacketFieldComplex[] | AbstractPacket[];\r\nexport declare type PacketFieldComplex = {\r\n    [key: string]: PacketFieldFixedWidth;\r\n};\r\nexport declare type PacketField = PacketFieldPrimitive | PacketFieldArray | PacketFieldComplex | AbstractPacket;\r\nexport declare type PacketFieldFixedWidthType = Class<PacketFieldFixedWidth>;\r\nexport declare type PacketFieldPrimitiveType = PacketFieldFixedWidthType | Class<UTF8String> | Class<Buffer>;\r\nexport declare type PacketFieldArrayType = [PacketFieldFixedWidthType] | [PacketFieldComplexType] | [Class<AbstractPacket>];\r\nexport declare type PacketFieldComplexType = {\r\n    [key: string]: PacketFieldFixedWidthType;\r\n};\r\nexport declare type PacketFieldVariableWidthType = PacketFieldArrayType | Class<Buffer> | Class<UTF8String>;\r\nexport declare type PacketFieldType = PacketFieldPrimitiveType | PacketFieldArrayType | PacketFieldComplexType | Class<AbstractPacket>;\r\nexport declare type PacketFieldPrimitiveTypeToPrimitive<T extends PacketFieldPrimitiveType> = InstanceType<T>;\r\nexport declare type PacketFieldArrayTypeToArray<T extends PacketFieldArrayType> = T[0] extends PacketFieldComplexType ? PacketFieldComplexTypeToComplex<T[0]>[] : (T[0] extends (PacketFieldFixedWidthType | Class<AbstractPacket>) ? InstanceType<T[0]>[] : never);\r\nexport declare type PacketFieldComplexTypeToComplex<T extends PacketFieldComplexType> = {\r\n    [K in keyof T]: T[K] extends PacketFieldPrimitiveType ? PacketFieldPrimitiveTypeToPrimitive<T[K]> : never;\r\n};\r\nexport declare type Class<T> = new (...args: any[]) => T;\r\nexport declare type DistributeArray<T> = T extends any ? T[] : never;\r\nexport declare type PropertyDecorator<T> = <K extends string, C extends {\r\n    [A in K]: T;\r\n}>(target: C, key: K) => void;\r\nexport declare type PacketFieldDecorator<T extends PacketFieldType> = T extends PacketFieldPrimitiveType ? PropertyDecorator<PacketFieldPrimitiveTypeToPrimitive<T>> : (T extends PacketFieldArrayType ? PropertyDecorator<PacketFieldArrayTypeToArray<T>> : (T extends PacketFieldComplexType ? PropertyDecorator<PacketFieldComplexTypeToComplex<T>> : (T extends Class<AbstractPacket> ? PropertyDecorator<AbstractPacket> : never)));\r\nexport declare const PACKET_STRUCTURE_SYMBOL: unique symbol;\r\nexport declare const BUFFER_OFFSET_SYMBOL: unique symbol;\r\n"}}
