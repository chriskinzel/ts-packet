{"code":"export class PacketEvent {\r\n    constructor(recoveryOptions) {\r\n        this.recoveryOptions = recoveryOptions;\r\n    }\r\n    if(targetClass, handler) {\r\n        if (this.packetClass === targetClass) {\r\n            handler(this.packet);\r\n        }\r\n    }\r\n    ifUnknown(handler) {\r\n        if (this.packet === undefined && this.packetClass === undefined) {\r\n            handler(this.packetType, this.recoveryOptions);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PacketEvent.js.map","map":"{\"version\":3,\"file\":\"PacketEvent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/PacketStream/PacketEvent.ts\"],\"names\":[],\"mappings\":\"AAeA,MAAM,OAAO,WAAW;IAOpB,YAAoB,eAAkD;QAClE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAEM,EAAE,CAA2B,WAAqB,EAAE,OAA4B;QACnF,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAClC,OAAO,CAAC,IAAI,CAAC,MAAW,CAAC,CAAC;SAC7B;IACL,CAAC;IAEM,SAAS,CAAC,OAAuF;QACpG,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAC7D,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD;IACL,CAAC;CACJ\"}","dts":{"name":"/Users/Chris/Projects/ts-packet/PacketStream/PacketEvent.d.ts","writeByteOrderMark":false,"text":"import { Class } from '../Types';\r\nimport { PacketTypeTypes, TypedPacket } from './PacketStream';\r\nexport interface PacketStreamErrorRecoveryOptions {\r\n    continue: () => void;\r\n    reset: () => void;\r\n    ignore: () => void;\r\n}\r\nexport declare class PacketEvent<T extends PacketTypeTypes> {\r\n    readonly packetType: T;\r\n    readonly packet: TypedPacket<T>;\r\n    readonly packetClass: Class<TypedPacket<T>>;\r\n    private readonly recoveryOptions;\r\n    private constructor();\r\n    if<P extends TypedPacket<T>>(targetClass: Class<P>, handler: (packet: P) => void): void;\r\n    ifUnknown(handler: (unexpectedType: T, recoveryOptions: PacketStreamErrorRecoveryOptions) => void): void;\r\n}\r\n"}}
